---
openapi: 3.0.1
info:
  title: Calendar
  description: "This REST API returns structured data for conference calls, dividends,\
    \ earnings (and future earnings dates), economics, pharmaceutical announcements,\
    \ guidance, IPOs, secondary  offerings, ratings, M&A activity, and splits.\n \n\
    ### Best Practices\nFor optimal performance, we have a few recommendations.\n\
    \ \n#### Limit query, improve performance\n \nLimiting the scope of the query\
    \ will directly improve the latency of the API.  This can be accomplished by using\
    \ parameters such as `parameters[tickers]` and `parameters[date]`, or (preferably)\
    \ by using `parameters[updated]` for deltas.\n \n#### Using Deltas\n \nA common\
    \ pattern is to use a delta to query for the latest change in a dataset.  By reducing\
    \ the amount of data available in the query, it will produce results with the\
    \ least amount of latency and limited data an application will have to traverse.\n\
    \ \nIn our case, we recommend tracking and querying by the latest updated timestamp.\n\
    \ \nOne caveat to allow for some latency and second-only timestamps: when querying,\
    \ set `parameters[updated]` to a value 5 seconds earlier than you actually want.\
    \  A query may look like:\n \n`/calendar/earnings?parameters[updated]=LAGGED_TIMESTAMP`\n\
    Where `LAGGED_TIMESTAMP` is set to be five seconds less than the maximum value\
    \ of the `updated` field in rows already pulled from our API."
  version: 2.0.0
servers:
- url: https://api.benzinga.com/api/v2.1
- url: http://api.benzinga.com/api/v2.1
paths:
/calendar/dividends:
    get:
      summary: Dividends Events
      description: Returns dividends data for a selected period and/or security.
      parameters:
      - name: accept
        in: header
        description: Specifies return format. Query parameters work the same for both
          formats.
        required: true
        schema:
          type: string
          default: application/json
          enum:
          - application/json
      - name: page
        in: query
        description: |-
          Page offset.
          For optimization, performance and technical reasons, page offsets are limited from 0 - 100000.  Limit the query results by other parameters such as date.
        schema:
          type: integer
          default: 0
      - name: pagesize
        in: query
        description: Number of results returned. Limit 1000
        schema:
          type: integer
      - name: parameters[date]
        in: query
        description: Date to query for calendar data. Shorthand for date_from and
          date_to if they are the same. Defaults for latest.
        schema:
          type: string
          format: YYYY-MM-DD
      - name: parameters[date_from]
        in: query
        description: Date to query from point in time.
        schema:
          type: string
          format: YYYY-MM-DD
      - name: parameters[date_to]
        in: query
        description: Date to query to point in time.
        schema:
          type: string
          format: YYYY-MM-DD
      - name: parameters[tickers]
        in: query
        description: One or more ticker symbols separated by a comma. All calendars
          accept this parameter (not including the FDA endpoint; for the FDA endpoint,
          please use  "parameters[securities]" instead). Ignored by the Economics
          endpoint.   Maximum 50 tickers. Note that for the IPOs endpoint, new tickers
          may not return  results right away as we do not automatically link them
          to the underlying company's  data. Thus, to obtain the most recent rows
          from the IPOs endpoint, send queries  without this parameter specified.
        schema:
          type: string
          format: csv
      - name: parameters[importance]
        in: query
        description: The importance level to filter by. Uses Greater Than or Equal
          To the importance indicated
        schema:
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
      - name: parameters[date_sort]
        in: query
        description: Dividend date field to sort on (newest to oldest)
        schema:
          type: string
          enum:
          - announced
          - ex
          - payable
          - record
      - name: parameters[updated]
        in: query
        description: Records last Updated Unix timestamp (UTC). This will force the
          sort order to be Greater Than or Equal to the timestamp indicated.
        schema:
          type: integer
          format: int64
      - name: parameters[dividend_yield_operation]
        in: query
        description: Specifies how to filter using dividend yield. gt = Greater Than,
          gte = Greater Than Equal, eq = Equal, lt = Less Than, lte = Less Than Equal
        schema:
          type: string
          enum:
          - gt
          - gte
          - eq
          - lte
          - lt
      - name: parameters[dividend_yield]
        in: query
        description: The dividend yield amount to filter by. Defaults to using Equal
          To the amount indicated. 1 =100%eater Than or Equal To’, ‘Equal To’, ‘Less
          Than or Equal To’, and ‘Less Than’ filters respectively.
        schema:
          type: number
          format: double
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  dividends:
                    type: array
                    items:
                      $ref: '#/components/schemas/dividends'
            application/xml (deprecated):
              schema:
                type: object
                properties:
                  dividends:
                    type: array
                    items:
                      $ref: '#/components/schemas/dividends'
      security:
      - token: []
  /calendar/earnings:
    get:
      summary: Returns the earnings data
      parameters:
      - name: accept
        in: header
        description: Specifies return format. Query parameters work the same for both
          formats.
        required: true
        schema:
          type: string
          default: application/json
          enum:
          - application/json
      - name: page
        in: query
        description: |-
          Page offset.
          For optimization, performance and technical reasons, page offsets are limited from 0 - 100000.  Limit the query results by other parameters such as date.
        schema:
          type: integer
          default: 0
      - name: pagesize
        in: query
        description: Number of results returned. Limit 1000
        schema:
          type: integer
      - name: parameters[date]
        in: query
        description: Date to query for calendar data. Shorthand for date_from and
          date_to if they are the same. Defaults for latest.
        schema:
          type: string
          format: YYYY-MM-DD
      - name: parameters[date_from]
        in: query
        description: Date to query from point in time.
        schema:
          type: string
          format: YYYY-MM-DD
      - name: parameters[date_to]
        in: query
        description: Date to query to point in time.
        schema:
          type: string
          format: YYYY-MM-DD
      - name: parameters[date_sort]
        in: query
        description: Field sort option for earnings calendar. Apply `:desc`, `:asc`
          for sort order.
        schema:
          type: string
          enum:
          - date
      - name: parameters[tickers]
        in: query
        description: One or more ticker symbols separated by a comma. All calendars
          accept this parameter (not including the FDA endpoint; for the FDA endpoint,
          please use  "parameters[securities]" instead). Ignored by the Economics
          endpoint.   Maximum 50 tickers. Note that for the IPOs endpoint, new tickers
          may not return  results right away as we do not automatically link them
          to the underlying company's  data. Thus, to obtain the most recent rows
          from the IPOs endpoint, send queries  without this parameter specified.
        schema:
          type: string
          format: csv
      - name: parameters[importance]
        in: query
        description: The importance level to filter by. Uses Greater Than or Equal
          To the importance indicated
        schema:
          type: integer
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
      - name: parameters[updated]
        in: query
        description: Records last Updated Unix timestamp (UTC). This will force the
          sort order to be Greater Than or Equal to the timestamp indicated.
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  earnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/earnings'
            application/xml (deprecated):
              schema:
                type: object
                properties:
                  earnings:
                    type: array
                    items:
                      $ref: '#/components/schemas/earnings'
      security:
      - token: []

    get:
      summary: Returns the available firms providing analyst ratings
      parameters:
      - name: fields
        in: query
        description: |
          Available fields:
          - id
          - name
          - currency
          - homepage
          - updated

          Default fields:
          - id
          - name
        schema:
          type: string
          format: csv
      - name: firm
        in: query
        description: A comma separated list of analyst firm ID's to bring back.  Omitting
          will bring back all available firms.
        schema:
          type: string
          format: csv
      - name: page
        in: query
        description: |-
          Page offset.
          For optimization, performance and technical reasons, page offsets are limited from 0 - 100000.  Limit the query results by other parameters such as date.
        schema:
          type: integer
          default: 0
      - name: pageSize
        in: query
        description: Number of results returned. Limit 1000. Default 50.
        schema:
          type: integer
      - name: updated
        in: query
        description: Records removed after Unix timestamp (UTC). This will force the
          sort order to be Greater Than or Equal to the timestamp indicated.
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                properties:
                  analyst_ratings_firm:
                    type: array
                    items:
                      $ref: '#/components/schemas/analyst-ratings-firm'
            application/xml (deprecated):
              schema:
                type: object
                properties:
                  analyst_ratings_firm:
                    type: array
                    items:
                      $ref: '#/components/schemas/analyst-ratings-firm'
      security:
      - token: []
components:
  schemas:
    dividends:
      type: object
      properties:
        id:
          type: string
          description: Unique ID of this entry
        date:
          type: string
          description: Announced Date on calendar
          format: YYYY-DD-MM
        notes:
          type: string
          description: Additional notes provided by the Benzinga Newsdesk where applicable.
            Notes may include HTML.
        updated:
          type: integer
          description: Last updated timestamp, UTC
        ticker:
          type: string
          description: Ticker Symbol (F, MSFT, etc...)
        name:
          type: string
          description: Name of security
        exchange:
          type: string
          description: Exchange (NYSE, NASDAQ, etc...)
        currency:
          type: string
          description: Currency the data is denominated in
        frequency:
          type: integer
          description: Frequency of the dividend
        dividend:
          type: string
          description: Dividend value. Expected value is a double if set or empty
            if null.
          format: double
        dividend_prior:
          type: string
          description: Period prior dividend value. Expected value is a double if
            set or empty if null.
          format: double
        dividend_type:
          type: string
          description: Type of dividend
        dividend_yield:
          type: string
          description: Yield of dividend. Expected value is a double if set or empty
            if null.
          format: double
        ex_dividend_date:
          type: string
          description: Dividend Ex Date
          format: YYYY-DD-MM
        payable_date:
          type: string
          description: Dividend Payable Date
          format: YYYY-DD-MM
        record_date:
          type: string
          description: Dividend Recorded Date
          format: YYYY-DD-MM
        importance:
          type: integer
          description: Subjective basis of how important event is to market. 5 = high
    token:
      type: apiKey
      name: token
      in: query